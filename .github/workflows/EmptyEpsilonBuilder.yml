name: EmptyEpsilonBuilder

on: workflow_dispatch
    
jobs:
  build-and-test:
    strategy:
      matrix:
        include:
          - ARCH: x86_64
            RUNS_ON: ubuntu-24.04
            BUILD_TYPE: appimage
          - ARCH: aarch64
            RUNS_ON: ubuntu-22.04-arm
            BUILD_TYPE: appimage
      fail-fast: false

    name: SNIS ${{ matrix.BUILD_TYPE }} ${{ matrix.ARCH }}
    runs-on: ${{ matrix.RUNS_ON }}
    
    env:
      ARCH: ${{ matrix.ARCH }}
      BUILD_TYPE: ${{ matrix.BUILD_TYPE }}
      # make sure to always(!) pull the base image
      UPDATE: 1

    steps:
    - uses: actions/checkout@v4

    - name: get linuxdeploy-x86_64.AppImage
      if: ${{ matrix.ARCH == 'x86_64' }} 
      run: |      
        wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        mv linuxdeploy-x86_64.AppImage linuxdeploy.AppImage
        chmod +x linuxdeploy.AppImage  
    - name: get linuxdeploy-aarch64.AppImage
      if: ${{ matrix.ARCH == 'aarch64' }}
      run: |
        #wget https://github.com/linuxdeploy/linuxdeploy/releases/download/1-alpha-20250213-2/linuxdeploy-aarch64.AppImage
        wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-aarch64.AppImage
        mv linuxdeploy-aarch64.AppImage linuxdeploy.AppImage
        chmod +x linuxdeploy.AppImage  
        
    - name: Configure MakeIt
      run: |      
        sudo apt install libfuse2 #required to build AppImage
        sudo apt-get install git build-essential cmake ninja-build zip unzip libsdl2-dev libfreetype6-dev
        git clone --depth 1 https://github.com/daid/EmptyEpsilon.git
        git clone --depth 1 https://github.com/daid/SeriousProton.git
        cd EmptyEpsilon
        mkdir -p _build
        cd _build
        cmake .. -G Ninja -DSERIOUS_PROTON_DIR=$PWD/../../SeriousProton/
        ninja
        #cd ../..

    - name: Build
      # Build your program with the given configuration
      run: |
        mkdir -p EmptyEpsilonAppImageDir/usr/bin
        cp EmptyEpsilon/_build/EmptyEpsilon EmptyEpsilonAppImageDir/usr/bin
        cp -r EmptyEpsilon/resources EmptyEpsilonAppImageDir/usr/bin
        cp -r EmptyEpsilon/scripts EmptyEpsilonAppImageDir/usr/bin
        ldd ~/EmptyEpsilonAppImageDir/usr/bin/EmptyEpsilon | awk 'NF == 4 { system("cp " $3 " ~/EmptyEpsilonAppImageDir/usr/lib/") }'

        git clone --depth 1 https://github.com/vpelss/EmptyEpsilon_AppImage.git
        #place AppRun script in EmptyEpsilonAppImageDir
        cp EmptyEpsilon_AppImage/AppRun EmptyEpsilonAppImageDir
        #place emptyepsilon.desktop in EmptyEpsilonAppImageDir
        cp EmptyEpsilon_AppImage/EmptyEpsilon.desktop EmptyEpsilonAppImageDir
        #place icon.png in EmptyEpsilonAppImageDir
        cp EmptyEpsilon_AppImage/icon.png EmptyEpsilonAppImageDir

        #set permissions
        chmod +x EmptyEpsilonAppImageDir/AppRun 
        chmod +x EmptyEpsilonAppImageDir/usr/bin/EmptyEpsilon
        chmod +x EmptyEpsilonAppImageDir/EmptyEpsilon.desktop



        # get linuxdeploy's AppImage if you donâ€™t have it
        # https://github.com/linuxdeploy/linuxdeploy
        # https://github.com/linuxdeploy/linuxdeploy/releases/
        wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        chmod +x linuxdeploy-x86_64.AppImage

        #run linuxdeploy and fix up generate an AppDir (add lib) and build AppImage 
        #ARCH=x86_64 ./linuxdeploy-x86_64.AppImage -v 0 --appdir EmptyEpsilonAppImageDir --output appimage
        ARCH=${{ matrix.ARCH }} ./linuxdeploy.AppImage --deploy-deps-only=$AppDir/usr/bin/bin --appdir $AppDir --output appimage
        
        chmod 777 EmptyEpsilon-${{ matrix.ARCH }}.AppImage

        #run it
        #./EmptyEpsilon-x86_64.AppImage

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: EmptyEpsilon-x86_64.AppImage 
        path: EmptyEpsilon-x86_64.AppImage 
